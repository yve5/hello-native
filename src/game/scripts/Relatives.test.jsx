import { selectOneAndRelatives } from './Relatives';

describe('selectOneAndRelatives. odd y', () => {
  const input = [
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
  ];

  it('should handle the one at x=0 and y=0', () => {
    expect(selectOneAndRelatives(input, 0, 0)).toEqual([
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
      ],
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
      ],
      [{ isLand: true }, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    ]);
  });

  it('should handle the one at x=4 and y=4', () => {
    expect(selectOneAndRelatives(input, 4, 4)).toEqual([
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
      ],
      [
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
      ],
      [
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
      ],
      [
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
      ],
      [{}, {}, {}, {}, { isLand: true }, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    ]);
  });

  it('should handle the one at x=9 and y=0', () => {
    expect(selectOneAndRelatives(input, 9, 0)).toEqual([
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{ isLand: true }, { isLand: true }, {}, {}, {}, {}, {}, {}, {}, {}],
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
      ],
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
      ],
    ]);
  });

  it('should handle the one at x=0 and y=8', () => {
    expect(selectOneAndRelatives(input, 0, 8)).toEqual([
      [
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
      [
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
      [{}, {}, {}, {}, {}, {}, {}, {}, { isLand: true }, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    ]);
  });

  it('should handle the one at x=9 and y=8', () => {
    expect(
      selectOneAndRelatives(
        [
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
          [{}, {}, {}, {}, {}, {}, {}, {}, {}],
        ],
        9,
        8
      )
    ).toEqual([
      [{}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, { isLand: true }, { isLand: true }],
      [
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
      [
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
    ]);
  });
});

describe('selectOneAndRelatives. even y', () => {
  const input = [
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
  ];

  it('should handle the one at x=0 and y=1', () => {
    expect(selectOneAndRelatives(input, 0, 1)).toEqual([
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
      ],
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
      ],
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
      ],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    ]);
  });

  it('should handle the one at x=4 and y=5', () => {
    expect(selectOneAndRelatives(input, 4, 5)).toEqual([
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, { isLand: true }, {}, {}, {}, {}],
      [
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
      ],
      [
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
      ],
      [
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
      ],
      [
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
      ],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    ]);
  });

  it('should handle the one at x=9 and y=1', () => {
    expect(selectOneAndRelatives(input, 9, 1)).toEqual([
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, { isLand: true }, {}, {}, {}, {}, {}, {}, {}, {}],
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
      ],
      [
        { isLand: true },
        { isLand: true },
        { isLand: true },
        { isLand: true },
        {},
        {},
        {},
        {},
        {},
        {},
      ],
    ]);
  });

  it('should handle the one at x=0 and y=9', () => {
    expect(selectOneAndRelatives(input, 0, 9)).toEqual([
      [
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
      [
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
      [{}, {}, {}, {}, {}, {}, {}, {}, { isLand: true }, { isLand: true }],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
    ]);
  });

  it('should handle the one at x=9 and y=9', () => {
    expect(selectOneAndRelatives(input, 9, 9)).toEqual([
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}],
      [{}, {}, {}, {}, {}, {}, {}, {}, {}, { isLand: true }],
      [
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
      [
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        { isLand: true },
        { isLand: true },
        { isLand: true },
      ],
    ]);
  });
});
